<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link rel="icon" href="views/icon/icon.ico">

    <title>密文检索系统</title>

    <link href="views/css/bootstrap.min.css" rel="stylesheet">
    <link href="views/css/cover.css" rel="stylesheet">
    <link href="views/css/help.css" rel="stylesheet">
  </head>

  <body>

    <div class="site-wrapper">

      <div class="site-wrapper-inner">

        <div class="cover-container">

          <div class="masthead clearfix">
            <div class="inner">
              <nav>
                <ul class="nav masthead-nav">
                  <li><a href="#">$!account.username</a></li>
                  <li class="active"><a href="search">搜索</a></li>
                  <li><a href="manage">文件管理</a></li>
                  <li><a href="info">个人信息</a></li>
                  <li><a href="quit">退出</a></li>
                  <li><a href="help">帮助</a></li>
                  <li><a href="download">下载辅助工具</a></li>
                  <li>
                      <input type="file" name="key" value="Key" id="key" style="display:none">
                      <button type="button" class="btn btn-primary" id="fakeKey" autofocus>取密钥</button>
                  </li>
                </ul>
              </nav>
            </div>
          </div>

          <div class="inner cover">
            <h1 class="cover-heading">密文检索系统</h1>
            <p class="lead">
                <form class="form-inline" role="form" action="retrieval" method="post" target="retrievalFrame">
                    <div class="input-group input-group-lg">
                        <input type="text" class="form-control" placeholder="..." id="searchValue"
                        aria-describedby="sizing-addon1" required style="width:420px">
                        <input type="hidden" name="searchType" value="boolean" id="searchType" />
                        <input type="hidden" name="trapdoor" value="" id="trapdoor" />
                        <input type="hidden" name="hmac" value="" id="hmac" />
                        <input type="reset" style="display:none;" />
                    </div>
                    <div class="btn-group btn-group-lg" role="group">
                        <button type="submit" class="btn btn-primary" id="search">Search</button>
                    </div>
                </form>
            </p>
          </div>

          <div class="inner cover">
              <iframe name="retrievalFrame" id="retrieval" width="800" height="300" style="display:none"></iframe>
          </div>

          <div class="inner cover">

              <p id="keyTips"></p>
          </div>
          <div class="mastfoot">
            <div class="inner">
              <a href="mailto:372812434@qq.com">@That</a>
            </div>
          </div>


        </div>

      </div>

    </div>

    <script src="views/js/jquery.js"></script>

    <script src="views/js/sha.js"></script>

    <script charset="utf-8">
        var keys;       // read keys
        $(function(){
            $("#key").change(function(){
                var file = $(this).get(0).files[0];
                var textType = /text.*/;
                if (file.type.match(textType)) {
                    var reader = new FileReader();
                    reader.onload = function(e) {
                        var text = reader.result;
                        keys = text.split("\n");
                    }
                    reader.readAsText(file);

                    $("#keyTips").removeClass("alert alert-danger");
                    $("#keyTips").text("");
                } else {
                    $("#keyTips").addClass("alert alert-danger");
                    $("#keyTips").text("文件类型必须为.TXT");
                }
            });

            $("#search").click(function(e){
                if("$!account.addKey" === "") {
                    $("#keyTips").addClass("alert alert-danger");
                    $("#keyTips").text("搜索前请在个人信息处上传服务器密钥！");
                    e.preventDefault();
                } else if(keys == undefined || !Array.isArray(keys)) {
                    $("#keyTips").addClass("alert alert-danger");
                    $("#keyTips").text("搜索前必须读取密钥文件！");
                    e.preventDefault();
                } else {
                    $("#keyTips").removeClass("alert alert-danger");
                    $("#keyTips").text("");
                    // judge boolean or rank
                    var text = $("#searchValue").val().trim();
                    var bool = false;
                    for(var i = 0; i < text.length; i ++) {
                        if(text[i] == '&' || text[i] == '|' || text[i] == '-') {
                            bool = true;
                            break;
                        }
                    }
                    var terms = [];
                    if(bool) {
                        // boolean
                        $("#searchType").val("boolean");
                        // get op's priority
                        var getPri = function(op) {
                            var result = -1;
                            if(op == "&") {
                                result = 1;
                            } else if(op == "|" || op == "-") {
                                result = 0;
                            } else if(op == "(") {
                                result = 100;
                            }
                            return result;
                        }
                        // infix to postfix
                        var buffer = "";
                        var opStack = [];
                        for(var i = 0; i < text.length; i ++) {
                            var c = text[i];
                            if(c == ' ' || c == '(' || c == ')' || c == '&' || c == '|' || c == '-') {
                                if(buffer != "") {
                                    // term
                                    var reg = /[\u4E00-\u9FA5]/g;
                                    if(!reg.test(buffer)) {
                                        // english
                                        buffer = buffer.toLowerCase();
                                    }
                                    terms.push(buffer);
                                    buffer = "";
                                }
                                if(c == " ") {
                                    continue;
                                } else if(c == "(") {
                                    opStack.push(c);
                                } else if(c == ")") {
                                    var op = opStack.pop();
                                    while(op != "(") {
                                        terms.push(op);
                                        op = opStack.pop();
                                    }
                                } else {
                                    // &, |, -
                                    if(opStack.length == 0) {
                                        opStack.push(c);
                                    } else {
                                        var op = opStack.pop();
                                        if(op == "(" || getPri(c) > getPri(op)) {
                                            opStack.push(op);
                                        } else {
                                            terms.push(op);
                                        }
                                        opStack.push(c);
                                    }
                                }
                            } else {
                                // buffer term
                                buffer = buffer.concat(c);
                            }
                        }
                        // get last term
                        if(buffer != "") {
                            terms.push(buffer.toLowerCase());
                        }
                        // rest ops
                        while(opStack.length != 0) {
                            terms.push(opStack.pop());
                        }
                        // work off chinese
                        var reg = /[\u4E00-\u9FA5]/g;
                        for(var i = 0; i < terms.length;) {
                            if(reg.test(terms[i])) {
                                // hava chinese
                                var tmp = terms[i].split("");
                                terms.splice(i ++, 1, tmp[0]);
                                for(var j = 1; j < tmp.length; j ++) {
                                    terms.splice(i ++, 0, tmp[j]);
                                    terms.splice(i ++, 0, "&");
                                }
                            } else {
                                i ++;
                            }
                        }
                    } else {
                        // rank
                        $("#searchType").val("rank");
                        // get terms
                        terms = text.split(" ");
                        var i = 0;
                        while(i < terms.length) {
                            if(terms[i] == "") {
                                terms.splice(i, 1);
                                continue;
                            }
                            var reg = /[\u4E00-\u9FA5]/g;
                            if(reg.test(terms[i])) {
                                // have chinese
                                var tmp = terms[i];
                                terms.splice(i, 1);
                                for(var j = 0; j < tmp.length; j ++) {
                                    terms.splice(i, 0, tmp[j]);
                                }
                                i += tmp.length;
                            } else {
                                terms[i] = terms[i].toLowerCase();
                                i ++;
                            }
                        }

                    }
                    // get terms hmac and trapdoor
                    var hmac = [];
                    var trapdoor = [];
                    var hmacKey = keys[1];
                    var trapdoorKey = keys[2];
                    if(hmacKey == undefined || trapdoorKey == undefined) {
                        $("#keyTips").addClass("alert alert-danger");
                        $("#keyTips").text("Hmac密钥缺失！");
                        e.preventDefault();
                    } else {
                        $("#keyTips").removeClass("alert alert-danger");
                        $("#keyTips").text("");
                        for(i = 0; i < terms.length ; i ++) {
                            if(terms[i] == "&" || terms[i] == "|" || terms[i] == "-") {
                                hmac.push(terms[i]);
                                trapdoor.push(terms[i]);
                            } else {
                                var shaObj = new jsSHA(terms[i], "TEXT");
                                hmac.push(shaObj.getHMAC(hmacKey, "B64", "SHA-256", "B64"));
                                trapdoor.push(shaObj.getHMAC(trapdoorKey, "B64", "SHA-256", "B64"));
                            }
                        }
                    }
                    // set value
                    $("#hmac").val(hmac);
                    $("#trapdoor").val(trapdoor);
                    // show result
                    $("#retrieval").show();

                }
            });

            $("#fakeKey").click(function(){
                $("#key").click();
            });


        });
    </script>

  </body>
</html>
